#!/bin/bash
apt-get update && apt-get -y upgrade
apt install nmap sudo netdiscover xsltproc -y
set -e

# Check if script is run as root
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root"
    exit 1
fi

# Check if network IP argument is provided
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <network_ip>"
    echo "Example: $0 10.10.10.1"
    exit 1
fi

NETWORK_IP="$1"
LOGFILE="network_assessment_$(date +%Y%m%d_%H%M%S).log"

log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOGFILE"
}

validate_ip() {
    local ip="$1"
    if [[ $ip =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
        IFS='.' read -ra ADDR <<< "$ip"
        for i in "${ADDR[@]}"; do
            if [[ $i -lt 0 || $i -gt 255 ]]; then
                return 1
            fi
        done
        return 0
    else
        return 1
    fi
}

# Validate the provided IP address
if ! validate_ip "$NETWORK_IP"; then
    echo "Error: Invalid IP address format: $NETWORK_IP"
    exit 1
fi

# Extract network from IP and create /24 CIDR
IFS='.' read -ra IP_OCTETS <<< "$NETWORK_IP"
NETWORK_CIDR="${IP_OCTETS[0]}.${IP_OCTETS[1]}.${IP_OCTETS[2]}.0/24"
NETWORK_PREFIX="${IP_OCTETS[0]}.${IP_OCTETS[1]}.${IP_OCTETS[2]}"

log_message "Starting automated network scan"
log_message "Network IP: $NETWORK_IP"
log_message "Network CIDR: $NETWORK_CIDR"
log_message "Working directory: $(pwd)"

# File naming based on network IP
FILE_PREFIX="nmap-${NETWORK_PREFIX}.0"

log_message "Running nmap discovery scan on $NETWORK_CIDR"
echo "Running nmap discovery scan on $NETWORK_CIDR..."
echo "This may take 10-20 minutes..."

nmap -sn -PR -PS21,22,23,25,110,143,80,445,139,8081,389,636,8080,443,3389,5985 -PU53,123,161,137,5353,1900 --max-retries 10 --host-timeout 60s -T3 "$NETWORK_CIDR" -oG "${FILE_PREFIX}-discovery.gnmap"

# Extract live hosts from nmap results
awk '/Up$/{print $2}' "${FILE_PREFIX}-discovery.gnmap" > "${FILE_PREFIX}-live-hosts.txt"

NMAP_HOST_COUNT=$(wc -l < "${FILE_PREFIX}-live-hosts.txt")
log_message "Nmap discovery scan completed - found $NMAP_HOST_COUNT hosts"

echo ""
echo "Running netdiscover scan (5 minutes)..."
log_message "Starting netdiscover scan"

# Run netdiscover for 5 minutes
timeout 300 netdiscover -P -N > "${FILE_PREFIX}-netdiscover.raw" 2>/dev/null || true

# Extract IPs from netdiscover output
if [[ -f "${FILE_PREFIX}-netdiscover.raw" ]]; then
    awk '{print $1}' "${FILE_PREFIX}-netdiscover.raw" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' > "${FILE_PREFIX}-netdiscover-hosts.txt"

    if [[ -s "${FILE_PREFIX}-netdiscover-hosts.txt" ]]; then
        NETDISCOVER_HOST_COUNT=$(wc -l < "${FILE_PREFIX}-netdiscover-hosts.txt")
        log_message "Netdiscover scan completed - found $NETDISCOVER_HOST_COUNT hosts"

        # Merge and deduplicate results
        cat "${FILE_PREFIX}-live-hosts.txt" "${FILE_PREFIX}-netdiscover-hosts.txt" | sort -u > "${FILE_PREFIX}-merged-hosts.txt"
        mv "${FILE_PREFIX}-merged-hosts.txt" "${FILE_PREFIX}-live-hosts.txt"
        log_message "Merged and deduplicated host lists"
    else
        log_message "No valid IPs found in netdiscover output"
    fi
else
    log_message "Netdiscover output file not created"
fi

# Display final host count
TOTAL_HOST_COUNT=$(wc -l < "${FILE_PREFIX}-live-hosts.txt")
log_message "Total unique hosts discovered: $TOTAL_HOST_COUNT"

echo ""
echo "Discovery complete - found $TOTAL_HOST_COUNT unique hosts"
echo "Target hosts:"
cat "${FILE_PREFIX}-live-hosts.txt"
echo ""

if [[ $TOTAL_HOST_COUNT -eq 0 ]]; then
    log_message "No hosts found. Exiting."
    echo "No live hosts found. Exiting."
    exit 1
fi

log_message "Starting deep scan on $TOTAL_HOST_COUNT hosts"
echo "Starting comprehensive port and vulnerability scan..."
echo "This will take a significant amount of time..."
echo ""

nmap -sS -sU -p T:1-65535,U:53,161,137,5353 -T3 --max-retries 7 --host-timeout 3600s --script "default,vuln and safe,auth" --script-timeout 300s -Pn -sV -O -iL "${FILE_PREFIX}-live-hosts.txt" -oA "${FILE_PREFIX}-deep-scan"

log_message "Deep scan completed"

# Generate HTML report if XML exists
if [[ -f "${FILE_PREFIX}-deep-scan.xml" ]]; then
    log_message "Generating HTML report"
    xsltproc "${FILE_PREFIX}-deep-scan.xml" -o "${FILE_PREFIX}-deep-scan.html"
    log_message "HTML report generated"
fi

log_message "Scan complete - all files saved in $(pwd)"
echo ""
echo "============================================"
echo "Scan completed successfully!"
echo "============================================"
echo "Files saved in: $(pwd)"
echo ""
echo "Generated files:"
echo "  - ${FILE_PREFIX}-discovery.gnmap"
echo "  - ${FILE_PREFIX}-live-hosts.txt"
echo "  - ${FILE_PREFIX}-netdiscover.raw"
echo "  - ${FILE_PREFIX}-netdiscover-hosts.txt"
echo "  - ${FILE_PREFIX}-deep-scan.nmap"
echo "  - ${FILE_PREFIX}-deep-scan.xml"
echo "  - ${FILE_PREFIX}-deep-scan.gnmap"
if [[ -f "${FILE_PREFIX}-deep-scan.html" ]]; then
    echo "  - ${FILE_PREFIX}-deep-scan.html"
fi
echo "  - $LOGFILE"
echo ""
log_message "Network Security Assessment Tool completed successfully"

exit 0
